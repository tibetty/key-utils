"use strict";const keyUtils=(()=>{function a(a,e){if(!a)throw Error(e)}async function e(e,t,r,i,l,n){const o=["Not a valid key pair","Key pair is not extractable","Web Crypto is not available"];let c=e.publicKey,y=e.privateKey;a(null!==c&&null!==y,o[0]),a(null!==c.algorithm&&c.algorithm.name===r&&null!==y.algorithm&&y.algorithm.name===r,o[0]),a(c.extractable&&y.extractable,o[1]),a(null!==crypto&&null!==crypto.subtle,o[2]);const s=crypto.subtle;return t=t||!1,{publicKey:await s.importKey("raw",await s.exportKey("raw",c),{name:i,namedCurve:c.algorithm.namedCurve},t,l),privateKey:await s.importKey("jwk",await Object.assign(await s.exportKey("jwk",y),{key_ops:n}),{name:i,namedCurve:y.algorithm.namedCurve},t,n)}}return{ecdhToEcdsa:async(a,t)=>await e(a,t,"ECDH","ECDSA",["verify"],["sign"]),ecdsaToEcdh:async(a,t)=>await e(a,t,"ECDSA","ECDH",[],["deriveBits","deriveKey"])}})();
